generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String    @id @default(uuid()) @db.Uuid
  email                    String    @unique
  username                 String
  password_hash            String
  email_verified           Boolean   @default(false)
  email_verification_token String?   @unique
  is_admin                 Boolean   @default(false)
  avatar_url               String?
  created_at               DateTime  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  sessions    Session[]
  games       Game[]    @relation("UserGames")
  reports     Report[]  @relation("UserReports")
  purchases   Purchase[] @relation("UserPurchases")
  reviews     Review[]
  carts       Cart[]
  comments    Comment[]
}

model Session {
  session_token String    @id
  user_id       String    @db.Uuid
  expires_at    DateTime  @db.Timestamptz(6)
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  user User @relation(fields: [user_id], references: [id])
}

model Game {
  id             String    @id @default(uuid()) @db.Uuid
  seller_id      String    @db.Uuid
  title          String
  description    String
  price          Decimal   @db.Decimal(10, 2)
  discount_price Decimal?  @db.Decimal(10, 2)
  developer      String
  publisher      String
  release_date   DateTime  @db.Date
  genre          String[]  @db.Text
  tags           String[]  @default([]) @db.Text
  image_url      String
  screenshots    String[]  @default([]) @db.Text
  video_url      String?
  file_url       String?
  is_active      Boolean   @default(true)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  seller    User?      @relation("UserGames", fields: [seller_id], references: [id])
  reports   Report[]   @relation("GameReports")
  purchases Purchase[] @relation("GamePurchases")
  reviews   Review[]
  carts     Cart[]
  comments  Comment[]
}

model Report {
  id          String   @id @default(uuid()) @db.Uuid
  game_id     String   @db.Uuid
  reporter_id String   @db.Uuid
  reason      String
  description String?
  status      String   @default("pending")
  created_at  DateTime @default(now()) @db.Timestamptz(6)

  reporter User @relation("UserReports", fields: [reporter_id], references: [id])
  game     Game @relation("GameReports", fields: [game_id], references: [id])
}

model Purchase {
  id          String   @id @default(uuid()) @db.Uuid
  user_id     String   @db.Uuid
  game_id     String   @db.Uuid
  price       Decimal  @db.Decimal(10, 2)
  amount_paid Decimal  @db.Decimal(10, 2)
  created_at  DateTime @default(now()) @db.Timestamptz(6)

  user User @relation("UserPurchases", fields: [user_id], references: [id])
  game Game @relation("GamePurchases", fields: [game_id], references: [id])
}

model Comment {
  id         String   @id @default(uuid()) @db.Uuid
  game_id    String   @db.Uuid
  user_id    String   @db.Uuid
  content    String
  created_at DateTime @default(now()) @db.Timestamptz(6)

  user User @relation(fields: [user_id], references: [id])
  game Game @relation(fields: [game_id], references: [id])
}

model Cart {
  id         String   @id @default(uuid()) @db.Uuid
  user_id    String   @db.Uuid
  game_id    String   @db.Uuid
  quantity   Int      @default(1)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  user User @relation(fields: [user_id], references: [id])
  game Game @relation(fields: [game_id], references: [id])
}

model Review {
  id         String   @id @default(uuid()) @db.Uuid
  user_id    String   @db.Uuid
  game_id    String   @db.Uuid
  rating     Int
  comment    String?
  created_at DateTime @default(now()) @db.Timestamptz(6)

  user User @relation(fields: [user_id], references: [id])
  game Game @relation(fields: [game_id], references: [id])
}
